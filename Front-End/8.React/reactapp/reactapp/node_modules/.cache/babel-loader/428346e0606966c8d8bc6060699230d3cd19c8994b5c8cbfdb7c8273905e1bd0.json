{"ast":null,"code":"var _jsxFileName = \"/home/sawan/Desktop/FullStack-Development/Front-End/8.React/reactapp/src/App.js\";\n// useEffect\n/*\nimport React,{useState, useEffect} from 'react';\n\nfunction App() {\n\n  let [no, setno] = useState(1)\n  let [val, setval] = useState(100)\n\n  let inc=()=>{\n    setno(no=no+1)\n  }\n\n  let dec=()=>{\n    setval(val=val-1)\n  }\n\n  useEffect(()=>{\n    console.log(\"use effect called...\");\n  }, [val])\n\n  return (\n    <>\n    <p>{no}</p>\n      <button onClick={inc}>Increment</button>\n\n      <p>{val}</p>\n      <button onClick={dec}>Decrement</button>\n    </>\n  );\n}\n\nexport default App;\n*/\n\n// Form Submit and get value\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"d\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// Using only one function(i.e. show), to show name and pass\n/*\nimport React, { useState } from 'react'\n\nfunction App() {\n  let obj = {\n    name: '',\n    password: ''\n  }\n  let [values, setvalues] = useState(obj)\n  let show = (e) => {\n    let { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value\n    })\n  }\n  return (\n    <>\n      <form>\n        Name:\n        <input type=\"text\" name=\"name\" onChange={show} />\n        <br /><br />\n        Password:\n        <input type=\"password\" name=\"password\" onChange={show} />\n\n      </form>\n      <p>{values.name}----{values.password}</p>\n    </>\n  )\n}\n\nexport default App\n*/\n\n// show name and pass with different different function(i.e. showName() & showPassword())\n/*\nimport React,{useState} from 'react';\n\nfunction App() {\n\n  let [name,setname] = useState('')\n  let [password,setpassword] = useState('')\n\n  let showName=(e)=>{\n    setname(name=e.target.value)\n  }\n\n  let showPassword=(e)=>{\n    setpassword(password=e.target.value)\n  }\n\n  return (\n    <>\n      <form>\n      <br/>\n        Name: <input type='text' name='name' onChange={showName}/><br/><br/>\n        Password: <input type='password' name='password' onChange={showPassword}/><br/><br/>\n      </form>\n\n      <p>Name: {name}</p>\n      <p>Password: {password}</p>\n    </>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","children","onSubmit","submit","type","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sawan/Desktop/FullStack-Development/Front-End/8.React/reactapp/src/App.js"],"sourcesContent":["// useEffect\n/*\nimport React,{useState, useEffect} from 'react';\n\nfunction App() {\n\n  let [no, setno] = useState(1)\n  let [val, setval] = useState(100)\n\n  let inc=()=>{\n    setno(no=no+1)\n  }\n\n  let dec=()=>{\n    setval(val=val-1)\n  }\n\n  useEffect(()=>{\n    console.log(\"use effect called...\");\n  }, [val])\n\n  return (\n    <>\n    <p>{no}</p>\n      <button onClick={inc}>Increment</button>\n\n      <p>{val}</p>\n      <button onClick={dec}>Decrement</button>\n    </>\n  );\n}\n\nexport default App;\n*/\n\n\n// Form Submit and get value\n\nimport React from 'react';\n\nfunction App() {\n  return (\n    <d>\n      <form onSubmit={submit}>\n        Name: <input type='text' name='name'/>\n      </form>\n    </d>\n  );\n}\n\nexport default App;\n\n\n\n// Using only one function(i.e. show), to show name and pass\n/*\nimport React, { useState } from 'react'\n\nfunction App() {\n  let obj = {\n    name: '',\n    password: ''\n  }\n  let [values, setvalues] = useState(obj)\n  let show = (e) => {\n    let { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value\n    })\n  }\n  return (\n    <>\n      <form>\n        Name:\n        <input type=\"text\" name=\"name\" onChange={show} />\n        <br /><br />\n        Password:\n        <input type=\"password\" name=\"password\" onChange={show} />\n\n      </form>\n      <p>{values.name}----{values.password}</p>\n    </>\n  )\n}\n\nexport default App\n*/\n\n\n\n\n// show name and pass with different different function(i.e. showName() & showPassword())\n/*\nimport React,{useState} from 'react';\n\nfunction App() {\n\n  let [name,setname] = useState('')\n  let [password,setpassword] = useState('')\n\n  let showName=(e)=>{\n    setname(name=e.target.value)\n  }\n\n  let showPassword=(e)=>{\n    setpassword(password=e.target.value)\n  }\n\n  return (\n    <>\n      <form>\n      <br/>\n        Name: <input type='text' name='name' onChange={showName}/><br/><br/>\n        Password: <input type='password' name='password' onChange={showPassword}/><br/><br/>\n      </form>\n\n      <p>Name: {name}</p>\n      <p>Password: {password}</p>\n    </>\n  );\n}\n\nexport default App;\n*/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAMG,QAAQ,EAAEC,MAAO;MAAAF,QAAA,GAAC,QAChB,eAAAF,OAAA;QAAOK,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAER;AAACC,EAAA,GARQV,GAAG;AAUZ,eAAeA,GAAG;;AAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}